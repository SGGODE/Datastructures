Given a BST and an integer. Find the least absolute difference between any node value of the BST and the given integer.

Example 1:

Input:
        10
      /   \
     2    11
   /  \ 
  1    5
      /  \
     3    6
      \
       4
K = 13
Output: 2
Explanation: K=13. The node that has
value nearest to K is 11. so the answer
is 2
Example 2:

Input:
      8
    /   \
   1     9
    \     \
     4    10
    /
   3
K = 9
Output: 0
Explanation: K=9. The node that has
value nearest to K is 9. so the answer
is 0.

class Solution
{
    public:
    //Function to find the least absolute difference between any node
	//value of the BST and the given integer.
	 int m=INT_MAX;
    int minDiff(Node *root, int K)
    {
        if(root==NULL)
         return 0;
        //Your code here
        if(root->data < K){
            m=min(m,K-root->data);
            minDiff(root->right,K);
        }
        else{
            m=min(m,root->data-K);
            minDiff(root->left,K);  
        }
    return m; 
    }
};
