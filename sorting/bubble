Bubble sort complexity
Now, let's see the time complexity of bubble sort in the best case, average case, and worst case. We will also see the space complexity of bubble sort.

1. Time Complexity
Case	Time Complexity
Best Case	O(n)
Average Case	O(n2)
Worst Case	O(n2)
Best Case Complexity - It occurs when there is no sorting required, i.e. the array is already sorted. The best-case time complexity of bubble sort is O(n).
Average Case Complexity - It occurs when the array elements are in jumbled order that is not properly ascending and not properly descending. The average case time complexity of bubble sort is O(n2).
Worst Case Complexity - It occurs when the array elements are required to be sorted in reverse order. That means suppose you have to sort the array elements in ascending order, but its elements are in descending order. The worst-case time complexity of bubble sort is O(n2).
2. Space Complexity
Space Complexity	O(1)
Stable	YES
The space complexity of bubble sort is O(1). It is because, in bubble sort, an extra variable is required for swapping.
The space complexity of optimized bubble sort is O(2). It is because two extra variables are required in optimized bubble sort.
Now, let's discuss the optimized bubble sort algorithm.

 void bubble(int a[], int n) // function to implement bubble sort  
 {  
   int i, j, temp;  
   for(i = 0; i < n; i++)    
    {    
      for(j = i+1; j < n; j++)    
        {    
            if(a[i] > a[j])    
            {    
                temp = a[i];    
                a[i] = a[j];    
                a[j] = temp;     
            }     
        }     
    }     
 }  
