#include <iostream>

using namespace std;
int fun=0;
int dp[40];
int fib(int n){
    fun++;
    if(n==1||n==2){
        return 1;
    }
    if(dp[n]!=-1)
     return dp[n];
    return dp[n]=fib(n-1)+fib(n-2);
}
int main()
{
    int n;
    cin>>n;
   for(int i=0;i<=n;i++){
       dp[i]=-1;
   }
   cout<<fib(n)<<" ";
   cout<<fun<<endl;
    return 0;
}
for loop soluction O(n)
rec. 0(2**n)
dp===rec+memoisation 
top down dp
0(n)

(iterative) always
bottom up dp
0(n) tc--sc
dp[n];
dp[0]=dp[1]=1;
for(int i=2;i<=n;i++){
 dp[i]=dp[i-2]+dp[i-1];
}
c=a+b;
a=b;
b=c;
 
