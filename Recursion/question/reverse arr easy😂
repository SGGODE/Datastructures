int print(int arr,int l,int r){
 if(l>=r){
  return 0;
  }
  swap(arr[l],arr[r]);
  print(arr,++l,--r);
  return 0;
  }
 int main(){
 int n;cin>>n;
 int arr[n];
 for(int i=0;i<n;i++){
  cin>>arr[i];
  }
 print(arr,0,n-1);
 for(int i=0;i<n;i++){
  cout<<arr[i]<<" ";
  }
  return 0;
 }
 
 //palindrome
bool print(string s,int i,int n){
 if(s[i]!=s[n-i-1]){                                  //if(i>=n/2) return 1;
  return 0;
  }
  return (i+1);
  } 
int main(){
 string s;
 cin>>s;
 int n=s.size();
 cout<<print(s,0,n);
 return 0;
 }
 
 void print(int arr[],int n,int i,int m){
 if(i>=n){
     cout<<m;
  return;
  }
  m=max(m,arr[i]);
  print(arr,n,++i,m);
   //return 0;
  } 
int main(){
 int n;
 cin>>n;
 int arr[n];
 for(int i=0;i<n;i++)
  cin>>arr[i];
 print(arr,n,0,0);
 return 0;
 }
 
 if there is multiple recursion call then 
 it execute in order one after another
 
 fib() is example of mutiple rc and it tc is O(2powern) exponential not exact
