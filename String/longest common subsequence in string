class Solution {
private:
bool check(string s){
   int i=0;
    int e=s.size()-1;
    while(i<e){
        if(s[i]==s[e]){
            i++;
            e--;
        }else{
            return 0;
        }
    }
    return 1;
}
string palin="";
void substring(string s,int n,string sub,int idx){
    if(idx==n){
        if(check(sub)&&sub.size()>palin.size()){
            palin.clear();
            palin=sub;
        }
        return;
    }
    sub.push_back(s[idx]);
    substring(s,n,sub,idx+1);
    sub.pop_back();
    substring(s,n,sub,idx+1);
}
public:
    string longestPalindrome(string s) {
        if(s.size()==1)
            return s;
        string sub;
        int n=s.size();
        substring(s,n,sub,0);
        return palin;
    }
};
