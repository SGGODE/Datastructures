class Solution {
private:
    int sub(vector<vector<int>>&dp,vector<pair<int,int>>adj[],int src,int n,int k,int dst){
        if(src==dst)return 0;
        if(k==0){
            for(auto&it:adj[src]){
                if(it.first==dst)return it.second;
            }
            return 1e9;
        }
        if(dp[src][k]!=-1)return dp[src][k];
        int ans = 1e9; 
        for(auto&it:adj[src]){
            ans = min(ans,it.second+sub(dp,adj,it.first,n,k-1,dst));
        }
        return dp[src][k]=ans;
    }
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {
        vector<pair<int,int>>adj[n];
        for(int i=0;i<flights.size();i++){
            adj[flights[i][0]].push_back({flights[i][1],flights[i][2]});
        }
        vector<vector<int>>dp(n,vector<int>(k+1,-1));
        int res = sub(dp,adj,src,n,k,dst);
        return res>=1e9?-1:res;
    }
};
