vector<int>dijkstra(int V, vector<vector<int>>adj[], int S)
    {
        // Code here
        vector<int>res(V,INT_MAX);
        vector<pair<int,int>>dumpadj[V+1];
        for(int i=0;i<V;i++){
            if(adj[i].empty())continue;
            else{
                for(auto it:adj[i]){
                  // cout<<it[0]<<" "<<it[1]<<endl;
                    dumpadj[i].push_back({it[0],it[1]});
                }
            }
        }
      queue<pair<int,int>>pq;
      set<pair<int,int>>s;
      s.insert({0,S});
        pq.push({0,S});
        res[S]=0;
        while(!s.empty()){
            auto it = *(s.begin());
            int temp=it.second;
            int time=it.first;
            s.erase(it);
            for(auto it:dumpadj[temp]){
                if(res[it.first]>res[temp]+it.second){
                    if(s.count({res[it.first],it.first}))s.erase({res[it.first],it.first});
                    res[it.first]=res[temp]+it.second;
                    s.insert({it.second,it.first});
                }
            }
        }
        
        return res;
        return {0,9};
       
    }
