class Solution {
private:
    
public:
    long long minimumReplacement(vector<int>& nums) {
      // int n = nums.size();
      // int last = nums[n-1];
      // int cnt=0;
      // for(int i=n-2;i>=0;i--){
      //     if(nums[i]<=last){
      //         last=nums[i];
      //     }else{
      //         while(last<nums[i]){
      //             ++cnt;
      //             nums[i]-=last;
      //         }
      //         last=min(nums[i],last);
      //     }
      // }
      //   return cnt;
         int n=nums.size();
        long long int c=0,lar=1e9+7;
        for(int i=n-1;i>=0;i--){
            if(nums[i]<=lar){
                lar=nums[i];
                continue;
            }
            long long int parts=(long long)ceil(nums[i]/(double)lar);
            c=(long long)c+parts-1;
            lar=nums[i]/parts;
        }
        return c;
    }
};
